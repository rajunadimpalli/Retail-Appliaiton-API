// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetailApp.API.Repository;

#nullable disable

namespace RetailApp.API.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240925122559_AddedConfiguration")]
    partial class AddedConfiguration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RetailApp.Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Features:\r\n- Features wraparound prints\r\n- Top rack dishwasher safe\r\n- Insulated stainless steel with removable lid\r\n- Mug holds 15oz(443ml)",
                            IsActive = true,
                            Name = "Travel Mug",
                            Price = 11.0
                        });
                });

            modelBuilder.Entity("RetailApp.Entities.Models.ProductApprovalQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductApprovalQueues");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            IsApproved = false,
                            ProductId = 1,
                            Reason = "price is > 10000",
                            RequestDate = new DateTime(2024, 9, 25, 8, 25, 59, 92, DateTimeKind.Local).AddTicks(120)
                        });
                });

            modelBuilder.Entity("RetailApp.Entities.Models.ProductApprovalQueue", b =>
                {
                    b.HasOne("RetailApp.Entities.Models.Product", "Product")
                        .WithOne("ProductApprovalQueue")
                        .HasForeignKey("RetailApp.Entities.Models.ProductApprovalQueue", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RetailApp.Entities.Models.Product", b =>
                {
                    b.Navigation("ProductApprovalQueue");
                });
#pragma warning restore 612, 618
        }
    }
}
